{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","components/Tomatoes/countDown.tsx","components/Login/login.tsx","redux/actions/todos.ts","redux/actions/tomatoes.ts","components/Todos/todoInput.tsx","components/Todos/todoItem.tsx","components/Todos/todos.tsx","components/Tomatoes/tomatoAction.tsx","components/Tomatoes/tomatoList.tsx","components/Tomatoes/tomatoes.tsx","components/Histories/polygon.tsx","components/Histories/TodoHistory/todoHistoryItem.tsx","components/Histories/TodoHistory/todoHistory.tsx","components/Histories/TomatoHistory/tomatoHistoryItem.tsx","components/Histories/TomatoHistory/tomatoHistory.tsx","components/Histories/Statistics/statisticsItem.tsx","components/Histories/Statistics/statistics.tsx","components/Histories/histories.tsx","components/Home/home.tsx","components/SignUp/signup.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","t","id","Object","assign","editing","tomatoes","store","createStore","rootReducer","history","createBrowserHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","token","setItem","status","push","timeId","Login","props","onChangeAccount","e","setState","account","target","value","onChangePassword","password","submit","a","post","Error","this","className","placeholder","onChange","prefix","UserOutlined","Password","LockOutlined","onClick","to","React","withRouter","updateTodo","updateTomato","TodoInput","description","onKeyUp","keyCode","postTodo","addTodo","data","resource","enterOutlined","EnterOutlined","EditOutlined","suffix","mapDispatchToProps","connect","ownProps","todoItem","params","completed","completed_at","Date","put","editTodo","onkeyUp","itemText","DeleteFilled","deleted","Text","onDoubleClick","todoItemClass","classNames","checked","Todos","emptyTodoList","unCompletedTodos","length","key","filter","unDeletedTodos","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","min","Math","floor","second","confirm","TomatoAction","discription","ended_at","forceUpdate","abortTomato","aborted","unfinishedTomato","showConfirm","onOk","onCancel","log","okText","cancelText","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","TomatoItem","format","parseISO","TomatoList","list","dates","d","finishedTomatoes","keys","sort","b","Tomatoes","addTomato","_","groupBy","Polygon","points","firstDay","lastY","range","finishedCount","pointArr","date","x","y","totalFinishedCount","join","fill","stroke","strokeWidth","TodoHistoryItem","todo","formatTime","itemType","updated_at","created_at","TabPane","TodoHistory","weekDay","finishedTodoList","finishedDates","getDay","dailyFinishedTodos","deletedTodoList","deletedTodos","defaultActiveKey","tab","finishedTodos","TomatoHistoryItem","tomato","extra","startTime","endTime","editingAction","historyItem","JSON","stringify","TomatoHistory","finishedTomatoList","dailyFinishedTomatoes","abortedTomatoList","abortedTomatoes","StatisticsItem","handleWidth","wid","ele","getElementById","rect","getElementsByClassName","left","getBoundingClientRect","right","Array","prototype","call","r","handleArr","span","timeSpan","arr","from","k","i","getDays","year","month","isLeapYear","1","3","4","5","6","7","8","9","10","11","12","handleTimeSpan","count","_d","getFullYear","getMonth","getDaysInMonth","dayjs","finishedMonths","includes","monthJobs","dateArr","dailyFinishedJobs","selectedMonth","v","dailyJobs","Xspan","Yspan","max","apply","selectedDays","monthTomatoesCount","point","firstPoint","window","addEventListener","removeEventListener","average","allowClear","picker","height","textAnchor","cx","cy","Statistics","monthFinishedTomatoes","tomatoMonths","monthFinishedTodos","todoMonths","Histories","toggleStatistic","staDisPlay","tomatoDisPlay","todoDisPlay","toggoleTomato","toggoleTodo","tomatoData","todosData","display","Home","getMe","get","user","getTodo","resources","initTodos","getTomatoes","initTomatoes","signOut","menu","Item","LogoutOutlined","overlay","trigger","DownOutlined","marginLeft","CopyrightCircleOutlined","SignUp","onChangePasswordConfirmation","passwordConfirmation","password_confirmation","App","path","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.185832c3.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport todos from './todos'\r\nimport tomatoes from './tomatoes'\r\n\r\nexport default combineReducers({ todos, tomatoes });","import { ADD_TODO, INIT_TODOS, UPDATE_TODOS, EDIT_TODOS } from \"../actionTypes\";\r\n\r\nexport default function (state = [],action:any) {\r\n    switch (action.type){\r\n        case ADD_TODO:\r\n            return [...state,action.payload]\r\n        case INIT_TODOS:\r\n            return [...action.payload]\r\n        case UPDATE_TODOS:\r\n            return state.map((t:any) => {\r\n                if(t.id === action.payload.id){\r\n                    return action.payload\r\n                }else{ return t }\r\n            })\r\n        case EDIT_TODOS:\r\n            return state.map((t:any) => {\r\n                if(t.id === action.payload){\r\n                    return Object.assign({},t,{editing:true})\r\n                }else {\r\n                    return Object.assign({},t,{editing:false})\r\n                }\r\n            })\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS'\r\nexport const UPDATE_TODOS = 'UPDATE_TODOS'\r\nexport const EDIT_TODOS = 'EDIT_TODOS'\r\n\r\nexport const ADD_TOMATO = 'ADD_TOMATO'\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES'\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO'\r\n","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from \"../actionTypes\";\r\n\r\nexport default function (state = [], action: any) {\r\n    switch(action.type) {\r\n        case ADD_TOMATO:\r\n            return [...state, action.payload]\r\n        case UPDATE_TOMATO:\r\n            return state.map((t: any) => {\r\n                if (t.id === action.payload.id) {\r\n                    return action.payload\r\n                } else { return t }\r\n            })\r\n        case INIT_TOMATOES:\r\n            return [...action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history","import axios from 'axios'\r\nimport history from './history'\r\n\r\nconst appId = \"sv2eTjKsNCV5BkjXfBRuMHgo\"\r\nconst appSecret = \"CtvAYi3xZp9G12Ld2yMzQL8T\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://gp-server.hunger-valley.com/',\r\n    // timeout: 1000,\r\n    headers: {\r\n        't-app-id' : appId,\r\n        't-app-secret' : appSecret\r\n    }\r\n});\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    const xToken = localStorage.getItem( 'x-token')\r\n    if(xToken) {\r\n        config.headers['Authorization'] = `Bearer ${xToken}`\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    console.error(error)\r\n    return Promise.reject(error);\r\n});\r\n\r\ninstance.interceptors.response.use(function (response) {\r\n    const token = response.headers['x-token']\r\n    if(token) {\r\n        localStorage.setItem('x-token',token)\r\n    }\r\n    return response;\r\n}, function (error) {\r\n    if(error.response.status === 401) {\r\n        history.push('/login');\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance","import * as React from 'react'\r\nimport './countDown.scss'\r\n\r\ninterface countDownProps {\r\n    timer:number\r\n    duration:number\r\n    onFinish:() => void\r\n}\r\n\r\ninterface countDownState {\r\n    countDown:number\r\n}\r\n\r\nlet timeId: NodeJS.Timeout \r\n\r\nclass CountDown extends React.Component<countDownProps, countDownState> {\r\n    constructor(props:any){\r\n        super(props)\r\n        this.state = {\r\n            countDown:this.props.timer\r\n        }\r\n    }\r\n\r\n    get countDown (){\r\n        const { countDown } = this.state\r\n        const min = Math.floor(countDown / 1000 / 60)\r\n        const second = Math.floor(countDown / 1000 % 60)\r\n        return `${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`  \r\n    }\r\n\r\n    componentDidMount(){\r\n        timeId = setInterval(()=>{\r\n            let time = this.state.countDown\r\n            this.setState({ countDown:time - 1000})\r\n            document.title = `${this.countDown} - WJW Potato`\r\n            if(time < 1000){\r\n                this.props.onFinish()\r\n                document.title = 'WJW 番茄土豆'\r\n                clearInterval(timeId)\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(timeId)\r\n        document.title = 'WJW 番茄土豆'\r\n    }\r\n\r\n    render (){\r\n        const percent = 1 - this.state.countDown/this.props.duration\r\n        return (\r\n            <div className=\"CountDown\" id=\"CountDown\">\r\n                <span className=\"restTime\">{this.countDown}</span>\r\n                <div className=\"progress\" style={{width:`${percent*100}%`}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountDown","import * as React from 'react'\r\nimport { Input, Button } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport axios from '../../config/axios'\r\nimport { Link, withRouter} from 'react-router-dom'\r\nimport './login.scss'\r\n\r\n\r\ninterface LoginState {\r\n    account: string,\r\n    password: string\r\n   \r\n}\r\n\r\nclass Login extends React.Component<any, LoginState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    onChangeAccount = (e: any) => {\r\n        this.setState({ account: e.target.value })\r\n    }\r\n\r\n    onChangePassword = (e: any) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n\r\n    submit = async () => {\r\n        const { account, password } = this.state\r\n        try {\r\n            await axios.post('sign_in/user', {\r\n                account,\r\n                password\r\n            })\r\n            this.props.history.push('/')\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { account, password } = this.state\r\n        return (\r\n            <div className=\"Login\" id=\"Login\">\r\n                <h1>W-番茄闹钟登录</h1>\r\n                <Input\r\n                    placeholder=\"请输入用户名\"\r\n                    value={account}\r\n                    onChange={this.onChangeAccount}\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                />\r\n                <Input.Password\r\n                    placeholder=\"请输入密码\"\r\n                    value={password}\r\n                    onChange={this.onChangePassword}\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                />\r\n                <Button\r\n                    onClick={this.submit}\r\n                    className=\"loginButton\"\r\n                    type=\"primary\">登录</Button>\r\n                <p>如果你没有账号，请<Link to='/signup'>注册</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login)","import { ADD_TODO, INIT_TODOS, UPDATE_TODOS, EDIT_TODOS } from \"../actionTypes\";\r\n\r\nexport const addTodo = (payload:any) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const initTodos = (payload:any[]) => {\r\n    return {\r\n        type:INIT_TODOS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateTodo = (payload: any) => {\r\n    return {\r\n        type: UPDATE_TODOS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const editTodo = (payload: number) => {\r\n    return {\r\n        type: EDIT_TODOS,\r\n        payload\r\n    }\r\n}","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from \"../actionTypes\";\r\n\r\nexport const addTomato = (payload: any) => {\r\n    return {\r\n        type: ADD_TOMATO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateTomato = (payload: any) => {\r\n    return {\r\n        type: UPDATE_TOMATO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const initTomatoes = (payload: any[]) => {\r\n    return {\r\n        type: INIT_TOMATOES,\r\n        payload\r\n    }\r\n}","import * as React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../../redux/actions/todos'\r\nimport axios from '../../config/axios'\r\nimport { Input } from 'antd'\r\nimport { EnterOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n\r\ninterface TodoInputState {\r\n    description: string\r\n}\r\n\r\ninterface todoInputProps {\r\n    addTodo:(payload:any) => any\r\n}\r\n\r\nclass TodoInput extends React.Component<any, TodoInputState, todoInputProps> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e: any) => {\r\n        this.setState({ description: e.target.value })\r\n    }\r\n\r\n    onKeyUp = (e: any) => {\r\n        if (e.keyCode === 13 && this.state.description !== '') {\r\n            this.postTodo()\r\n        }\r\n    }\r\n\r\n    postTodo = async() => {\r\n        try {\r\n            const response = await axios.post('todos', { description: this.state.description })\r\n            this.props.addTodo(response.data.resource)\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n        this.setState({ description: '' })\r\n    }\r\n\r\n    render() {\r\n        const { description } = this.state\r\n        const enterOutlined = description ? <EnterOutlined onClick={this.postTodo} /> : <span />\r\n        return (\r\n            <div className=\"TodoInput\" id=\"TodoInput\">\r\n                <Input\r\n                    placeholder=\"添加新任务\"\r\n                    prefix={<EditOutlined />}\r\n                    suffix={enterOutlined}\r\n                    value={description}\r\n                    onChange={this.onChange}\r\n                    onKeyUp={this.onKeyUp}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput)","import * as React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { editTodo, updateTodo } from '../../redux/actions/todos'\r\nimport { Checkbox } from 'antd';\r\nimport { EnterOutlined, DeleteFilled } from '@ant-design/icons';\r\nimport axios from '../../config/axios'\r\nimport classNames from 'classnames'\r\nimport './todoItem.scss'\r\n\r\ninterface todoItemProps {\r\n    id:number,\r\n    description: string,\r\n    completed:boolean,\r\n    editing:boolean,\r\n    updateTodo:(payload:any) => any,\r\n    editTodo:(id:number) => any\r\n}\r\n\r\ninterface todoItemText {\r\n    itemText:string\r\n}\r\n\r\nclass todoItem extends React.Component<todoItemProps, todoItemText> {\r\n    constructor(props:any) {\r\n        super(props)\r\n        this.state = {\r\n            itemText: this.props.description\r\n        }\r\n    }\r\n\r\n    updateTodo = async (params: any) => {\r\n        if(params.completed){\r\n            params.completed_at = new Date()\r\n        }\r\n        try {\r\n            const response = await axios.put(`todos/${this.props.id}`, params)\r\n            this.props.updateTodo(response.data.resource)\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    editTodo = () => { \r\n        this.props.editTodo(this.props.id)\r\n    }\r\n\r\n    onkeyUp = (e:any) => {\r\n        if(e.keyCode === 13 && this.state.itemText !== '') {\r\n            this.updateTodo({description: this.state.itemText})\r\n        }\r\n    }\r\n\r\n    onClick = () => {\r\n        if (this.state.itemText !== '') {\r\n            this.updateTodo({ description: this.state.itemText })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const editing = (\r\n            <div className=\"editing\">\r\n                <input value={this.state.itemText} \r\n                onChange={(e:any) => {this.setState({itemText:e.target.value})}}\r\n                onKeyUp={this.onkeyUp} />\r\n                <div className=\"iconWrapper\">\r\n                    <EnterOutlined onClick={this.onClick}/>\r\n                    <DeleteFilled onClick={(e) => { this.updateTodo({deleted:true})}}/>\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n        const Text = <span className=\"text\" onDoubleClick={this.editTodo}>{this.props.description}</span>;\r\n\r\n        const todoItemClass = classNames({\r\n            todoItem:true,\r\n            editing:this.props.editing,\r\n            completed:this.props.completed\r\n        })\r\n\r\n        return (\r\n            <div className={todoItemClass} id=\"todoItem\">\r\n                <Checkbox \r\n                checked={this.props.completed} \r\n                    onChange={e => this.updateTodo({completed:e.target.checked})}   \r\n                />\r\n                { this.props.editing ? editing :Text }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    editTodo, \r\n    updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(todoItem)","import * as React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport TodoInput from './todoInput'\r\nimport TodoItem from './todoItem'\r\nimport './todos.scss'\r\n\r\n\r\nclass Todos extends React.Component<any> {\r\n\r\n    get unDeletedTodos () {\r\n        return this.props.todos.filter((t:any) => !t.deleted)\r\n    }\r\n\r\n    get unCompletedTodos () {\r\n        return this.unDeletedTodos.filter((t: any) => !t.completed)\r\n    }\r\n\r\n    get completedTodos() {\r\n        return this.unDeletedTodos.filter((t: any) => t.completed)\r\n    }\r\n\r\n    emptyTodoList = ()=> {\r\n        if(this.unCompletedTodos.length === 0){\r\n            return (\r\n                <div className=\"empty\">\r\n                    <span>无记录</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"Todos\" id=\"Todos\">\r\n                <TodoInput/>\r\n                <div className=\"todoLists\">\r\n                    {\r\n                        this.unCompletedTodos.map((t: any) => \r\n                        <TodoItem key={t.id} {...t}/>)\r\n                    }\r\n                    {this.emptyTodoList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => ({\r\n    todos: state.todos,\r\n    ...ownProps\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Todos)","import * as React from 'react'\r\nimport { Button, Input, Modal } from 'antd';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport axios from '../../config/axios'\r\nimport CountDown from './countDown'\r\nimport './tomatoAction.scss'\r\n\r\ninterface tomatoActionProps {\r\n    startTomato:() => void,\r\n    updateTomato: (payload:any)=> void,\r\n    unfinishedTomato:any\r\n}\r\n\r\ninterface TomatoActionState {\r\n    discription:string\r\n}\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass TomatoAction extends React.Component<tomatoActionProps, TomatoActionState> {\r\n    constructor(props:any) {\r\n        super(props)\r\n        this.state = {\r\n            discription:''\r\n        }\r\n    }\r\n   \r\n    onKeyUp = (e: any) => {\r\n        if (e.keyCode === 13 && this.state.discription !== '') {\r\n            this.updateTomato({ description: this.state.discription,\r\n                 ended_at: new Date() })\r\n            this.setState({ discription: '' })\r\n        }\r\n    }\r\n\r\n    onFinish = () => {\r\n        this.forceUpdate()\r\n        document.title = 'WJW 番茄土豆'\r\n    }\r\n\r\n    abortTomato = () => {\r\n        this.updateTomato({aborted:true})\r\n    }\r\n\r\n    updateTomato = async(params:any) => {\r\n        try {\r\n            const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params)\r\n            this.props.updateTomato(response.data.resource)\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    showConfirm = ()=> {\r\n        confirm({\r\n            title: '您目前正在一个番茄工作时间中，要放弃这个番茄吗？',\r\n            onOk: () => {\r\n                this.abortTomato()\r\n            },\r\n            onCancel() {\r\n                console.log('取消');\r\n            },\r\n            okText: '确认',\r\n            cancelText: '取消'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let html = <div/>\r\n        if (this.props.unfinishedTomato === undefined){\r\n            html = <Button onClick={this.props.startTomato}>开始番茄</Button>\r\n        }else{\r\n            const startedAt = Date.parse(this.props.unfinishedTomato.started_at)\r\n            const duration = this.props.unfinishedTomato.duration\r\n            const timeNow = new Date().getTime()\r\n            if(timeNow - startedAt > duration){\r\n                html = <div className=\"inputWrapper\">\r\n                    <Input  placeholder=\"刚刚完成了什么事？\"\r\n                        value={this.state.discription}\r\n                        onChange={(e:any) => {this.setState({discription:e.target.value})}}\r\n                        onKeyUp={this.onKeyUp}\r\n                    />\r\n                    <CloseCircleOutlined\r\n                        onClick={this.showConfirm}\r\n                        className=\"abort\" />\r\n                </div>\r\n            }else if (timeNow - startedAt < duration){\r\n                const timer = duration - timeNow + startedAt\r\n                html = (\r\n                    <div className=\"countDownWrapper\">\r\n                        <CountDown timer={timer} \r\n                            duration={duration}\r\n                            onFinish={this.onFinish} />\r\n                        <CloseCircleOutlined\r\n                            onClick={this.showConfirm}\r\n                            className=\"abort\" />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n                {html}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TomatoAction","import * as React from 'react'\r\nimport { format, parseISO} from 'date-fns'\r\nimport './tomatoList.scss'\r\n\r\ninterface tomatoListProps {\r\n    finishedTomatoes:any\r\n}\r\n\r\nconst TomatoItem = function (props:any){\r\n    return (\r\n        <div className=\"content\">\r\n            <span className=\"time\">{format(parseISO(props.started_at), 'HH:mm')} - {format(parseISO(props.ended_at), 'H:mm')}</span>\r\n            <span className=\"description\">{props.description}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass TomatoList extends React.Component<tomatoListProps> {\r\n    \r\n    get dates (){\r\n        const dates = Object.keys(this.props.finishedTomatoes)\r\n        return dates.sort((a,b)=>Date.parse(b) - Date.parse(a))\r\n    }\r\n\r\n    render(){\r\n        const list = this.dates.map((d) => {\r\n            const tomatoes = this.props.finishedTomatoes[d]\r\n            return(\r\n                <div key={d} className=\"List\">\r\n                    <div className=\"title\">\r\n                        <span>{d}</span>\r\n                        <span>完成了 {tomatoes.length} 个番茄</span>\r\n                    </div>\r\n                    {tomatoes.map((t: any) => <TomatoItem key={t.id} {...t}/>)}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"TomatoList\" id=\"TomatoList\">\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TomatoList","import * as React from 'react'\r\nimport TomatoAction from './tomatoAction'\r\nimport TomatoList from './tomatoList'\r\nimport {connect} from 'react-redux'\r\nimport { addTomato,updateTomato} from '../../redux/actions/tomatoes'\r\nimport _ from 'lodash'\r\nimport { format, parseISO} from 'date-fns'\r\nimport axios from '../../config/axios'\r\nimport './tomatoes.scss'\r\n\r\ninterface tomatoesProps {\r\n    addTomato:(payload:any)=> any,\r\n    updateTomato: (payload: any) => any,\r\n    tomatoes: any[],\r\n    initTomatoes: (payload:any[]) => any\r\n}\r\n\r\nclass Tomatoes extends React.Component<tomatoesProps>{\r\n\r\n    get unfinishedTomato () {\r\n        return this.props.tomatoes.filter((t:any) => \r\n            !t.description && !t.ended_at && !t.aborted)[0]\r\n        \r\n    }\r\n\r\n    get finishedTomatoes () {\r\n        const finishedTomatoes = this.props.tomatoes.filter((t: any) =>\r\n            t.description && t.ended_at && !t.aborted)\r\n        return _.groupBy(finishedTomatoes,(t) => {\r\n            return format(parseISO(t.started_at),'yyyy-MM-d')\r\n        })\r\n    }\r\n\r\n    startTomato = async () => {\r\n        try {\r\n            const response = await axios.post('tomatoes', { duration: 1500000 })\r\n            this.props.addTomato(response.data.resource)\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n                <TomatoAction \r\n                    startTomato={this.startTomato}\r\n                    unfinishedTomato={this.unfinishedTomato}\r\n                    updateTomato={this.props.updateTomato}/>\r\n                <TomatoList finishedTomatoes={this.finishedTomatoes}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { tomatoes: any; }, ownProps: any) => ({\r\n    tomatoes: state.tomatoes,\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addTomato,\r\n    updateTomato\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes)","import * as React from 'react'\r\n\r\ninterface PolygonProps {\r\n    data:any\r\n    totalFinishedCount:number\r\n}\r\n\r\n\r\n\r\nclass Polygon extends React.Component<PolygonProps> {\r\n    \r\n\r\n    points = ()=> {\r\n        const dates = Object.keys(this.props.data).sort((a,b) =>{\r\n            return Date.parse(a) - Date.parse(b)\r\n        })\r\n        const firstDay = dates[0]\r\n        if(firstDay){\r\n            const range = new Date().getTime() - Date.parse(firstDay)\r\n            let finishedCount = 0\r\n            let lastY\r\n            const pointArr = dates.map(date => {\r\n                if(date === firstDay){\r\n                    lastY = 0\r\n                    return ''\r\n                }\r\n                const x = (Date.parse(date) - Date.parse(firstDay))/range * 332\r\n                finishedCount += this.props.data[date].length\r\n                const y = (1 - (finishedCount/this.props.totalFinishedCount)) * 60\r\n                lastY = y\r\n                return `${x},${y}`\r\n            })\r\n            return ['0,60',...pointArr,`332,${lastY}`,'332,60'].join(' ')\r\n        }else{\r\n            return \"0,60 332,60\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Polygon\" id=\"Polygon\">\r\n                <svg>\r\n                    <polygon fill=\"rgba(215,78,78,0.1)\" \r\n                        stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" \r\n                        points={this.points()} \r\n                    />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Polygon","import * as React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {format,parseISO} from 'date-fns'\r\nimport { updateTodo} from '../../../redux/actions/todos'\r\nimport axios from '../../../config/axios'\r\nimport './todoHistoryItem.scss'\r\n\r\ninterface todoHistoryItemProps {\r\n    todo:any\r\n    updateTodo:(payload:any) => void,\r\n    itemType:string\r\n}\r\n\r\nclass TodoHistoryItem extends React.Component<todoHistoryItemProps> {\r\n\r\n    updateTodo = async(params:any)=>{\r\n        try {\r\n            const response = await axios.put(`todos/${this.props.todo.id}`, params)\r\n            this.props.updateTodo(response.data.resource)\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let action\r\n        let formatTime\r\n        if(this.props.itemType === \"finished\"){\r\n            formatTime = format(parseISO(this.props.todo.updated_at), 'HH:mm')\r\n            action = (\r\n                <div className=\"action\">\r\n                    <span onClick={()=> this.updateTodo({completed:false})}>恢复</span>\r\n                    <span onClick={()=> this.updateTodo({deleted:true})}>删除</span>\r\n                </div>\r\n            )\r\n        }else if(this.props.itemType === 'deleted'){\r\n            formatTime = format(parseISO(this.props.todo.created_at), 'yyyy-MM-dd HH:mm')\r\n            action = (\r\n                <div className=\"action\">\r\n                    <span onClick={() => this.updateTodo({deleted: false})}>恢复</span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className=\"TodoHistoryItem\" id=\"TodoHistoryItem\">\r\n                <div className=\"text\">\r\n                    <span className=\"time\">{formatTime}</span>\r\n                    <span className=\"description\">{this.props.todo.description}</span>\r\n                </div>\r\n                {action}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryItem)","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { format, parseISO } from 'date-fns'\r\nimport { Tabs } from 'antd'\r\nimport _ from 'lodash'\r\nimport './todoHistory.scss'\r\nimport  TodoHistoryItem from './todoHistoryItem'\r\n\r\ninterface todoHistoryProps {\r\n    todos: any[]\r\n}\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass TodoHistory extends React.Component<todoHistoryProps> {\r\n\r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.deleted)\r\n    }\r\n\r\n    get deletedTodos() {\r\n        return this.props.todos.filter(t => t.deleted)\r\n    }\r\n\r\n    get dailyFinishedTodos() {\r\n        return _.groupBy(this.finishedTodos, (t: any) => {\r\n            return format(parseISO(t.updated_at), 'yyyy-MM-d')\r\n        })\r\n    }\r\n\r\n    get finishedDates() {\r\n        return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n    }\r\n\r\n    render() {\r\n        const weekDay = [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"]\r\n        const finishedTodoList = this.finishedDates.map(date => {\r\n            return (\r\n                <div key={date} className=\"dailyTodos\">\r\n                    <div className=\"summary\">\r\n                        <p className=\"date\">\r\n                            <span>{date}</span>\r\n                            <span>{weekDay[new Date(date).getDay()]}</span>\r\n                        </p>\r\n                        <span className=\"finishedCount\">完成了{this.dailyFinishedTodos[date].length}个任务</span>\r\n                    </div>\r\n                    <div className=\"todoList\">\r\n                        {\r\n                            this.dailyFinishedTodos[date].map(todo =>\r\n                                <TodoHistoryItem key={todo.id} \r\n                                todo={todo} itemType=\"finished\"/>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const deletedTodoList = this.deletedTodos.map(todo => {\r\n            return (\r\n                <TodoHistoryItem key={todo.id} todo={todo} itemType=\"deleted\"/> \r\n            )\r\n        })\r\n\r\n        return (\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"已完成的任务\" key=\"1\">\r\n                    <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n                        {finishedTodoList}\r\n                    </div>\r\n                </TabPane>\r\n                <TabPane tab=\"已删除的任务\" key=\"2\">\r\n                    <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n                        {deletedTodoList}\r\n                    </div>\r\n                </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => ({\r\n    todos: state.todos,\r\n    ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(TodoHistory)","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { format, parseISO } from 'date-fns'\r\nimport { updateTomato } from '../../../redux/actions/tomatoes'\r\nimport axios from '../../../config/axios'\r\nimport './tomatoHistoryItem.scss'\r\n\r\ninterface tomatoHistoryItemProps {\r\n    tomato: any\r\n    updateTomato: (payload: any) => void,\r\n    itemType: string\r\n}\r\n\r\ninterface tomatoHistoryItemState {\r\n    description:string\r\n}\r\n\r\nclass TomatoHistoryItem extends React.Component<tomatoHistoryItemProps, tomatoHistoryItemState> {\r\n    constructor(props:any){\r\n        super(props)\r\n        this.state = {\r\n            description:this.props.tomato.description\r\n        }\r\n    }\r\n\r\n    updateTomato = async (params: any) => {\r\n        try {\r\n            const response = await axios.put(`tomatoes/${this.props.tomato.id}`, params)\r\n            this.props.updateTomato(response.data.resource)\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    onKeyUp = (e:any) =>{\r\n        if (e.keyCode === 13 && this.state.description !== '') {\r\n            this.updateTomato({ description: this.state.description, extra: {}})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let action\r\n        let formatTime\r\n        let description\r\n        if (this.props.itemType === \"finished\") {\r\n            const startTime = format(parseISO(this.props.tomato.started_at), 'HH:mm')\r\n            const endTime = format(parseISO(this.props.tomato.ended_at), 'HH:mm')\r\n            formatTime = `${startTime} - ${endTime}`\r\n            description = this.props.tomato.description\r\n            action = (\r\n                <div className=\"action\">\r\n                    <span onClick={() => this.updateTomato({ extra: {editing:true} })}>编辑</span>\r\n                    <span onClick={() => this.updateTomato({ aborted: true })}>删除</span>\r\n                </div>\r\n            )\r\n        } else if (this.props.itemType === 'aborted') {\r\n            formatTime = format(parseISO(this.props.tomato.created_at), 'yyyy-MM-dd HH:mm')\r\n            description = this.props.tomato.description ? this.props.tomato.description:'无番茄描述'\r\n            action = (\r\n                <div className=\"action\">\r\n                    <span onClick={() => this.updateTomato({ extra: { editing: true } })}>编辑</span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const editingAction = (\r\n            <div className=\"action\">\r\n                <span onClick={() => this.updateTomato({ description: this.state.description, extra: {} })}>提交</span>\r\n                <span onClick={() => this.updateTomato({ extra: {} })}>取消</span>\r\n            </div>\r\n        )\r\n\r\n        const editing = (\r\n            <div className=\"itemWrapper\">\r\n                <div className=\"text\">\r\n                    <span className=\"time\">{formatTime}</span>\r\n                    <input className=\"editing\" value={this.state.description}\r\n                        onChange={(e: any) => { this.setState({ description: e.target.value }) }}\r\n                        onKeyUp={this.onKeyUp} />\r\n                </div>\r\n                {editingAction}\r\n            </div>\r\n        )\r\n\r\n        const historyItem = (\r\n            <div className=\"itemWrapper\">\r\n                <div className=\"text\">\r\n                    <span className=\"time\">{formatTime}</span>\r\n                    <span className=\"description\">{description}</span>\r\n                </div>\r\n                {action}\r\n            </div>\r\n        )\r\n        \r\n        return (\r\n            <div className=\"TomatoHistoryItem\" id=\"TomatoHistoryItem\">\r\n                {\r\n                    (JSON.stringify(this.props.tomato.extra) === `{\"editing\":true}`)  ? editing : historyItem\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateTomato\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistoryItem)","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { format, parseISO } from 'date-fns'\r\nimport { Tabs } from 'antd'\r\nimport TomatoHistoryItem from './tomatoHistoryItem'\r\nimport _ from 'lodash'\r\nimport './tomatoHistory.scss'\r\n\r\ninterface tomatoHistoryProps {\r\n    tomatoes: any[]\r\n}\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass TomatoHistory extends React.Component<tomatoHistoryProps> {\r\n\r\n\r\n\r\n    get finishedTomatoes() {\r\n        return this.props.tomatoes.filter(t => t.description && !t.aborted && t.ended_at )\r\n    }\r\n\r\n    get abortedTomatoes() {\r\n        return this.props.tomatoes.filter(t => t.aborted && t.description)\r\n    }\r\n\r\n    get dailyFinishedTomatoes() {\r\n        return _.groupBy(this.finishedTomatoes, (t: any) => {\r\n            return format(parseISO(t.started_at), 'yyyy-MM-d')\r\n        })\r\n    }\r\n\r\n    get finishedDates() {\r\n        return Object.keys(this.dailyFinishedTomatoes).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n    }\r\n\r\n    render() {\r\n        const weekDay = [\"周日\",\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\"]\r\n        const finishedTomatoList = this.finishedDates.map(date => {\r\n            return (\r\n                <div key={date} className=\"dailyTomatoes\">\r\n                    <div className=\"summary\">\r\n                        <p className=\"date\">\r\n                            <span>{date}</span>\r\n                            <span>{weekDay[new Date(date).getDay()]}</span>\r\n                        </p>\r\n                        <span className=\"finishedCount\">完成了{this.dailyFinishedTomatoes[date].length}个番茄</span>\r\n                    </div>\r\n                    <div className=\"tomatoList\">\r\n                        {\r\n                            this.dailyFinishedTomatoes[date].map(tomato =>\r\n                                <TomatoHistoryItem key={tomato.id}\r\n                                    tomato={tomato} itemType=\"finished\" />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const abortedTomatoList = this.abortedTomatoes.map(tomato => {\r\n            return (\r\n                <TomatoHistoryItem key={tomato.id} tomato={tomato} itemType=\"aborted\" />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"完成的番茄\" key=\"1\">\r\n                    <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n                        {finishedTomatoList}\r\n                    </div>\r\n                </TabPane>\r\n                <TabPane tab=\"弃用番茄记录\" key=\"2\">\r\n                    <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n                        {abortedTomatoList}\r\n                    </div>\r\n                </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { tomatoes: any; }, ownProps: any) => ({\r\n    tomatoes: state.tomatoes,\r\n    ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(TomatoHistory)","import * as React from 'react'\r\nimport { DatePicker } from 'antd'\r\nimport { getDaysInMonth, isLeapYear} from 'date-fns'\r\nimport dayjs from 'dayjs'\r\nimport './statisticsItem.scss'\r\n\r\n\r\ninterface StatisticsItemProps {\r\n    monthJobs: any,\r\n    finishedMonths: any,\r\n    dailyFinishedJobs: any\r\n}\r\n\r\ninterface StatisticsItemState {\r\n    timeSpan: number,\r\n    width: number | null,\r\n    arr: any[],\r\n    monthTomatoesCount: number\r\n}\r\n\r\n\r\nclass StatisticsItem extends React.Component<StatisticsItemProps, StatisticsItemState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            timeSpan: 0,\r\n            width: 968,\r\n            arr: [],\r\n            monthTomatoesCount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleWidth()\r\n        window.addEventListener('resize', this.handleWidth)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleWidth)\r\n    }\r\n\r\n    handleWidth = () => {\r\n        const ele = document.getElementById('StatisticsItem')\r\n        const rect = document.getElementsByClassName('rect')\r\n        const left = ele?.getBoundingClientRect().left\r\n        const right = ele?.getBoundingClientRect().right\r\n        let wid\r\n        if (left) { wid = (right && left) ? right - left - 32 : null } else {\r\n            wid = right ? right - 32 : null\r\n        }\r\n        this.setState({ width: wid })\r\n        if (rect) Array.prototype.map.call(rect, r => { r.style.width = `${this.state.width}px`})\r\n        this.handleArr()\r\n    }\r\n\r\n    handleArr = () => {\r\n        let span = this.state.width ? (this.state.width * 97.5 / 100) / (this.state.timeSpan - 1) : 0\r\n        let arr = Array.from(new Array(this.state.timeSpan), (k, i) => ({ x: (i * span), y: 170 }))\r\n        this.setState({ arr })\r\n    }\r\n\r\n    getDays = (year: number, month: number) => {\r\n        if (month === 2) {\r\n            return isLeapYear(year) ? 29 : 28\r\n        }\r\n\r\n        const dayObj = {\r\n            1: 31, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31\r\n        }\r\n\r\n        return (dayObj as any)[month]\r\n    }\r\n\r\n    handleTimeSpan = (e: any) => {\r\n        this.handleWidth()\r\n        const year = new Date(e._d).getFullYear()\r\n        const month = new Date(e._d).getMonth() \r\n        const timeSpan = getDaysInMonth(new Date(year, month)) \r\n        const date = dayjs(e._d).format('YYYY-MM')\r\n        let count\r\n        if (this.props.finishedMonths.includes(date)) {\r\n            count = this.props.monthJobs[date].length\r\n        } else {\r\n            count = 0\r\n        }\r\n        const dateArr = Object.keys(this.props.dailyFinishedJobs)\r\n        const selectedMonth = Array.from({ length: this.getDays(year, month + 1) }, (v, k) => `${year}-${month + 1}-${k+1}`)\r\n        const dailyJobs = dateArr.map(d => {  return this.props.dailyFinishedJobs[d].length })\r\n        const Xspan = this.state.width ? (this.state.width * 97.5 / 100) / (timeSpan - 1) : 0\r\n        const Yspan = 170 / Math.max.apply(null, dailyJobs) \r\n        const arr = Array.from(new Array(timeSpan), (k, i) => {\r\n            let y\r\n            const selectedDays = dayjs(selectedMonth[i]).format('YYYY-MM-DD')\r\n            const length = this.props.dailyFinishedJobs[selectedDays] ? this.props.dailyFinishedJobs[selectedDays].length : 0\r\n            if (length > 0){\r\n                y = 176 - length * Yspan \r\n            } else { y = 170}\r\n            return {x:(i*Xspan),y:y}\r\n        })\r\n        this.setState({ timeSpan: timeSpan, arr: arr, monthTomatoesCount: count })\r\n\r\n    }\r\n\r\n    point = () => {\r\n        let firstPoint = this.state.arr[0]\r\n        if (firstPoint) {\r\n            const pointArr = this.state.arr.map(e => {\r\n                return `L${e.x + 7.5},${e.y}`\r\n            })\r\n            return [`M${firstPoint.x + 7.5},${firstPoint.y}`, ...pointArr].join(' ')\r\n        } else {\r\n            return \"M7.5,170 L7.5,170\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const average = this.state.timeSpan ? (Math.floor((this.state.monthTomatoesCount / this.state.timeSpan) * 100) / 100) : 0\r\n        return (\r\n            <div className=\"StatisticsItem\" id=\"StatisticsItem\">\r\n                <div className=\"timeContainer\">\r\n                    <span className=\"monthChoose\">请选择月份：</span>\r\n                    <DatePicker\r\n                        allowClear={false}\r\n                        onChange={this.handleTimeSpan}\r\n                        picker=\"month\" />\r\n                </div>\r\n                <div className=\"countContainer\">\r\n                    <span className=\"count\"><strong>{this.state.monthTomatoesCount}</strong> 总数</span>\r\n                    <span className=\"count\"><strong>{average}</strong> 日平均数</span>\r\n                </div>\r\n                <div className=\"chartContainer\">\r\n                    <svg width=\"100%\" height=\"200px\">\r\n                        <g>\r\n                            <rect x=\"0\" y=\"0\" height=\"170px\" id=\"rect\" className=\"rect\"></rect>\r\n                            {this.state.arr.map((e, i) => {\r\n                                return <text x={e.x + 7.5} y={200} textAnchor=\"middle\" key={i}>{i + 1}</text>\r\n                            })}\r\n                            <path d={this.point()}></path>\r\n                            {this.state.arr.map((e, i) => {\r\n                                return <circle cx={e.x + 7.5} cy={e.y} r=\"5\" key={i}></circle>\r\n                            })}\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatisticsItem","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { format, parseISO } from 'date-fns'\r\nimport { Tabs } from 'antd'\r\nimport _ from 'lodash'\r\nimport StatisticsItem from './statisticsItem'\r\n\r\ninterface StatisticsProps {\r\n    todos:any[];\r\n    tomatoes:any[]\r\n}\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass Statistics extends React.Component<StatisticsProps> {\r\n    \r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.deleted)\r\n    }\r\n\r\n    get finishedTomatoes() {\r\n        return this.props.tomatoes.filter(t => t.description && !t.aborted && t.ended_at)\r\n    }\r\n\r\n    get dailyFinishedTodos() {\r\n        return _.groupBy(this.finishedTodos, (t: any) => {\r\n            return format(parseISO(t.updated_at), 'yyyy-MM-dd')\r\n        })\r\n    }\r\n\r\n    get dailyFinishedTomatoes() {\r\n        return _.groupBy(this.finishedTomatoes, (t: any) => {\r\n            return format(parseISO(t.started_at), 'yyyy-MM-dd')\r\n        })\r\n    }\r\n\r\n    get monthFinishedTodos() {\r\n        return _.groupBy(this.finishedTodos, (t: any) => {\r\n            return format(parseISO(t.updated_at), 'yyyy-MM')\r\n        })\r\n    }\r\n\r\n    get monthFinishedTomatoes() {\r\n        return _.groupBy(this.finishedTomatoes, (t: any) => {\r\n            return format(parseISO(t.started_at), 'yyyy-MM')\r\n        })\r\n    }\r\n\r\n    get tomatoMonths() {\r\n        return Object.keys(this.monthFinishedTomatoes).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n    }\r\n\r\n    get todoMonths () {\r\n        return Object.keys(this.monthFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"番茄统计\" key=\"1\">\r\n                    <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n                        <StatisticsItem  \r\n                            dailyFinishedJobs={this.dailyFinishedTomatoes}\r\n                            monthJobs={this.monthFinishedTomatoes}\r\n                            finishedMonths={this.tomatoMonths}/>\r\n                    </div>\r\n                </TabPane>\r\n                <TabPane tab=\"任务统计\" key=\"2\">\r\n                    <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n                        <StatisticsItem\r\n                            dailyFinishedJobs={this.dailyFinishedTodos}\r\n                            monthJobs={this.monthFinishedTodos}\r\n                            finishedMonths={this.todoMonths} />\r\n                    </div>\r\n                </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; tomatoes:any }, ownProps: any) => ({\r\n    todos: state.todos,\r\n    tomatoes: state.tomatoes,\r\n    ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(Statistics)","import * as React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport { format, parseISO} from 'date-fns'\r\nimport Polygon from './polygon'\r\nimport TodoHistory from './TodoHistory/todoHistory'\r\nimport TomatoHistory from './TomatoHistory/tomatoHistory'\r\nimport Statistics from './Statistics/statistics'\r\nimport './histories.scss'\r\n\r\ninterface historiesProps {\r\n    todos:any\r\n    tomatoes:any\r\n}\r\n\r\ninterface historiesState {\r\n    staDisPlay:string,\r\n    tomatoDisPlay:string,\r\n    todoDisPlay:string\r\n}\r\n\r\nclass Histories extends React.Component<historiesProps, historiesState> {\r\n    constructor(props: Readonly<historiesProps>){\r\n        super(props)\r\n        this.state = {\r\n            staDisPlay:'block',\r\n            tomatoDisPlay:'none',\r\n            todoDisPlay:'none'\r\n        }\r\n    }\r\n    \r\n    get finishedTodos (){\r\n        return this.props.todos.filter((t:any) => t.completed && !t.deleted)\r\n    }\r\n\r\n    get finishedTomatoes(){\r\n        return this.props.tomatoes.filter((t:any) => t.description && !t.aborted && t.ended_at)\r\n    }\r\n\r\n    get tomatoData (){\r\n        return _.groupBy(this.finishedTomatoes, (t: any) => {\r\n            return format(parseISO(t.started_at), 'yyyy-MM-d')\r\n        })\r\n    }\r\n\r\n    get todosData (){\r\n        return _.groupBy(this.finishedTodos,(t:any)=>{\r\n            return format(parseISO(t.updated_at),'yyyy-MM-d')\r\n        })\r\n    }\r\n\r\n\r\n    toggleStatistic = () => {\r\n        if(this.state.staDisPlay === 'block'){\r\n            this.setState({\r\n                tomatoDisPlay: 'none',\r\n                staDisPlay: 'none',\r\n                todoDisPlay: 'none'\r\n            })\r\n        }else{\r\n            this.setState({\r\n                tomatoDisPlay: 'none',\r\n                staDisPlay: 'block',\r\n                todoDisPlay: 'none'\r\n            })\r\n        }\r\n    }\r\n\r\n    toggoleTomato = () => {\r\n        if (this.state.tomatoDisPlay === 'block') {\r\n            this.setState({\r\n                tomatoDisPlay: 'none',\r\n                staDisPlay: 'none',\r\n                todoDisPlay: 'none'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                tomatoDisPlay: 'block',\r\n                staDisPlay: 'none',\r\n                todoDisPlay: 'none'\r\n            })\r\n        }\r\n    }\r\n\r\n    toggoleTodo = () => {\r\n        if (this.state.todoDisPlay === 'block') {\r\n            this.setState({\r\n                tomatoDisPlay: 'none',\r\n                staDisPlay: 'none',\r\n                todoDisPlay: 'none'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                tomatoDisPlay: 'none',\r\n                staDisPlay: 'none',\r\n                todoDisPlay: 'block'\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"Histories\" id=\"Histories\">\r\n                <ul>\r\n                    <li onClick={this.toggleStatistic}>\r\n                        <div className=\"gragh\">\r\n                            <div className=\"title\">统计</div>\r\n                        </div>\r\n                    </li>\r\n                    <li onClick={this.toggoleTomato}>\r\n                        <div className=\"gragh\" >\r\n                            <div className=\"title\">番茄历史</div>\r\n                            <span className=\"textTitle\">累计完成番茄</span>\r\n                            <span className=\"number\">{this.finishedTomatoes.length}</span>\r\n                        </div>\r\n                        <Polygon data={this.tomatoData}\r\n                            totalFinishedCount={this.finishedTomatoes.length} />\r\n                    </li>\r\n                    <li onClick={this.toggoleTodo}>\r\n                        <div className=\"gragh\" >\r\n                            <div className=\"title\">任务历史</div>\r\n                            <span className=\"textTitle\">累计完成任务</span>\r\n                            <span className=\"number\">{this.finishedTodos.length}</span>\r\n                        </div>\r\n                        <Polygon data={this.todosData}\r\n                            totalFinishedCount={this.finishedTodos.length} />\r\n                    </li>\r\n                </ul>\r\n                <div style={{display:this.state.staDisPlay}}>\r\n                    <Statistics />\r\n                </div>\r\n                <div style={{ display: this.state.tomatoDisPlay }}>\r\n                    <TomatoHistory />\r\n                </div>\r\n                <div style={{ display: this.state.todoDisPlay }}>\r\n                    <TodoHistory />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any;tomatoes:any }, ownProps: any) => ({\r\n    todos: state.todos,\r\n    tomatoes: state.tomatoes,\r\n    ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(Histories)","import * as React from 'react'\r\nimport {  Menu, Dropdown } from 'antd'\r\nimport { DownOutlined, LogoutOutlined, CopyrightCircleOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios'\r\nimport { connect} from 'react-redux'\r\nimport { initTodos } from '../../redux/actions/todos'\r\nimport { initTomatoes } from '../../redux/actions/tomatoes'\r\nimport Todos from '../Todos/todos'\r\nimport Tomatoes from '../Tomatoes/tomatoes'\r\nimport Histories from '../Histories/histories'\r\nimport { withRouter } from 'react-router-dom'\r\nimport './home.scss'\r\n\r\ninterface indexState {\r\n    user: any\r\n}\r\n\r\nclass Home extends React.Component<any, indexState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n\r\n    async UNSAFE_componentWillMount() {\r\n        await this.getMe()\r\n        await this.getTodo()\r\n        await this.getTomatoes()\r\n    }\r\n\r\n    getMe = async () => {\r\n        const response = await axios.get('me')\r\n        this.setState({ user: response.data })\r\n    }\r\n\r\n    getTodo = async () => {\r\n        try {\r\n            const response = await axios.get('todos')\r\n            const todos = response.data.resources.map((t: any) => Object.assign({}, t, { editing: false }))\r\n            this.props.initTodos(todos)\r\n        } catch (e) { throw new Error(e) }\r\n    }\r\n\r\n    getTomatoes = async () => {\r\n        try {\r\n            const response = await axios.get('tomatoes')\r\n            this.props.initTomatoes(response.data.resources)\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    signOut = () => {\r\n        localStorage.setItem('x-token', '')\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    menu = (\r\n        <Menu>\r\n            <Menu.Item key=\"2\" onClick={this.signOut}><LogoutOutlined/>登出</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Home\" id=\"Home\">\r\n                <header>\r\n                    <span className=\"Logo\"> WJW-番茄土豆</span>\r\n                    <Dropdown overlay={this.menu} trigger={['click']}>\r\n                        <span className=\"User\">\r\n                            {this.state.user.account} <DownOutlined style={{ marginLeft: 8 }}/>\r\n                        </span>\r\n                    </Dropdown>\r\n                </header>\r\n                <main>\r\n                    <Tomatoes />\r\n                    <Todos />\r\n                </main>\r\n                <div>   \r\n                    <Histories />\r\n                </div>\r\n                <footer><CopyrightCircleOutlined /> <span>©吴一晏</span></footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: { todos: any; }, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    initTodos,\r\n    initTomatoes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Home))","import * as React from 'react'\r\nimport { Input, Button } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport axios from '../../config/axios'\r\nimport { Link,withRouter } from 'react-router-dom'\r\nimport './signup.scss'\r\n\r\n\r\ninterface SignUpState {\r\n    account: string,\r\n    password: string,\r\n    passwordConfirmation: string\r\n}\r\n\r\nclass SignUp extends React.Component<any, SignUpState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n            passwordConfirmation: ''\r\n        };\r\n    }\r\n\r\n    onChangeAccount = (e: any) => {\r\n        this.setState({ account: e.target.value })\r\n    }\r\n\r\n    onChangePassword = (e: any) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n    onChangePasswordConfirmation = (e: any) => {\r\n        this.setState({ passwordConfirmation: e.target.value })\r\n    }\r\n\r\n    submit = async () => {\r\n        const { account, password, passwordConfirmation } = this.state\r\n        try {\r\n            await axios.post('sign_up/user', {\r\n                account,\r\n                password,\r\n                password_confirmation: passwordConfirmation\r\n            })\r\n            this.props.history.push('/')\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { account, password, passwordConfirmation } = this.state\r\n        return (\r\n            <div className=\"SignUp\" id=\"SignUp\">\r\n                <h1>W-番茄闹钟注册</h1>\r\n                <Input\r\n                    placeholder=\"请输入用户名\"\r\n                    value={account}\r\n                    onChange={this.onChangeAccount}\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                />\r\n                <Input.Password\r\n                    placeholder=\"请输入密码\"\r\n                    value={password}\r\n                    onChange={this.onChangePassword}\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                />\r\n                <Input.Password\r\n                    placeholder=\"请确认密码\"\r\n                    value={passwordConfirmation}\r\n                    onChange={this.onChangePasswordConfirmation}\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                />\r\n                <Button\r\n                    onClick={this.submit}\r\n                    className=\"signUpButton\"\r\n                    type=\"primary\">注册</Button>\r\n                <p>如果你有账号，请<Link to='/login'>登录</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp)","import React from \"react\";\nimport {Router, Route, Switch} from \"react-router-dom\";\nimport Login from \"./components/Login/login\"\nimport Home from \"./components/Home/home\"\nimport SignUp from \"./components/SignUp/signup\"\nimport history from \"../src/config/history\"\n\nclass App extends React.Component{\n\n  render(){\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}